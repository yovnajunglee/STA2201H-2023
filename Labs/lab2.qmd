---
title: "lab2"
format: pdf
editor: visual
---

# Lab 2

```{r echo=TRUE, message=FALSE, warning=FALSE}
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
```

### 1. 

```{r echo=TRUE, message=FALSE, warning=FALSE, fig.height=10}

all_data <- list_packages(limit = 500)
#head(all_data)

res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res %>% mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res %>% filter(year==2022) %>%
  select(id) %>% pull()

delay_2022 <- get_resource(delay_2022_ids)

# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)

delay_2022 %>% 
  filter(min_delay>0) %>% 
  group_by(line, station) %>% 
  summarise(mean_delays = mean(min_delay, na.rm =T)) %>%
  slice_max(mean_delays, n=5) %>%
  ggplot(aes(x = station, y = mean_delays)) + 
  geom_col(aes(fill = line), alpha = .5) + 
  facet_wrap(~line, scales = "free_y", ncol = 1) + 
  theme(axis.text.x = element_text(angle = 90)) + coord_flip()
  
  
```

### 2. 

```{r echo=TRUE, message=FALSE, warning=FALSE}

all_data <- list_packages(limit = 500)
#head(all_data)

res2 <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
campaign_2014 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")[[2]]


```

### 3. 

```{r echo=TRUE, message=FALSE, warning=FALSE}

colnames(campaign_2014) <- campaign_2014[1,]
campaign_2014 <- campaign_2014[-1,] %>% clean_names()
head(campaign_2014)
```

### 4.

There are several variables with a large number of missing values (e.g., contributors address, goods or service, relationship to candidate,...). While some of these variables may not be important (e.g., contributors address), other variables such as relationship to candidate could be necessary to answer research questions such as 'which factors drive contributions?'.

The contribution amount variable which was in character format was changed to numeric.

```{r echo=TRUE, message=FALSE, warning=FALSE}
skim(campaign_2014)

campaign_2014$contribution_amount <- as.numeric(campaign_2014$contribution_amount)
```

### 5. 

We plot the histogram of the contribution amount on both the original and log scale. There is one notable outlier with contribution amount 508224.73. However, contributions that exceed 10000 can also be considered as potential outliers. These outliers are mostly monetary contributions from Doug and Rob Ford for their election campaigns.\

```{r echo=TRUE, message=FALSE, warning=FALSE}

campaign_2014 %>% 
  ggplot(aes(x = contribution_amount, y = ..density..)) +
  geom_histogram()

campaign_2014 %>% 
  ggplot(aes(x = contribution_amount, y = ..density..)) +
  geom_histogram() + scale_x_log10() + 
  labs(x= "log(contribution amount)")

campaign_2014 %>% filter(contribution_amount <= 10000) %>% 
  ggplot(aes(x = contribution_amount, y = ..density..)) + 
  geom_histogram() +scale_x_log10() +  
  labs(title = "Distribution of contributions with potential \noutliers removed", 
       x= "log(contribution amount)")
```

### 6.

-    Highest mean contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}

df <- campaign_2014 %>% group_by(contributors_name) %>% 
  summarise(ave_cont  = mean(contribution_amount), 
            total_cont  = sum(contribution_amount),
            n_cont  = n())

df %>% slice_max(ave_cont, n = 5) %>% 
  select(contributors_name, ave_cont)
  
```

-    Highest total contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}
df %>% slice_max(total_cont, n = 5)%>% 
  select(contributors_name, total_cont)
```

-    Highest number of contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}
df %>% slice_max(n_cont, n = 5)%>% 
  select(contributors_name, n_cont)
```

### 7. 

-    Highest mean contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}

df2 <- campaign_2014 %>% filter(relationship_to_candidate %in% c("Spouse", NA)) %>%
  group_by(contributors_name) %>% 
  summarise(ave_cont  = mean(contribution_amount), 
            total_cont  = sum(contribution_amount), 
            n_cont  = n())

df2 %>% slice_max(ave_cont, n = 5) %>% 
  select(contributors_name, ave_cont)
  
```

-    Highest total contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}
df2 %>% slice_max(total_cont, n = 5)%>% 
  select(contributors_name, total_cont)
```

-    Highest number of contributions

```{r echo=TRUE, message=FALSE, warning=FALSE}
df2 %>% slice_max(n_cont, n = 5)%>% 
  select(contributors_name, n_cont)
```

### 8. 

```{r echo=TRUE, message=FALSE, warning=FALSE}

campaign_2014 %>% select(contributors_name, candidate) %>% 
  distinct() %>% group_by(contributors_name) %>% 
  summarise(ncand = n()) %>% filter(ncand >1) %>% 
  nrow()
```
