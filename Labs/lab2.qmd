---
title: "lab2"
format: pdf
editor: visual
---

# Lab 2

To be handed in via submission of quarto file (and rendered pdf) to GitHub.

```{r}
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)
```

1\. Using the \`delay_2022\` data, plot the five stations with the highest mean delays. Facet the graph by \`line\`

```{r}

all_data <- list_packages(limit = 500)
#head(all_data)

res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res %>% mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res %>% filter(year==2022) %>% select(id) %>% pull()

delay_2022 <- get_resource(delay_2022_ids)

# make the column names nicer to work with
delay_2022 <- clean_names(delay_2022)

delay_2022 %>% group_by(station) %>% summarise(mean_delays = mean(min_delay, na.rm =T), line = line) %>% distinct() %>% arrange(desc(mean_delays)) %>% head(5) %>% ggplot(aes(x = station, y = mean_delays)) +  geom_col(aes(fill = line), alpha = .5) + facet_wrap(~line, scales = "free_x") + theme(axis.text.x = element_text(angle = 90))
  
  
```

2\. Using the \`opendatatoronto\` package, download the data on mayoral campaign contributions for 2014. Hints:

 + find the ID code you need for the package you need by searching for 'campaign' in the \`all_data\` tibble above

 + you will then need to \`list_package_resources\` to get ID for the data file

 + note: the 2014 file you will get from \`get_resource\` has a bunch of different campaign contributions, so just keep the data that relates to the Mayor election

```{r}

all_data <- list_packages(limit = 500)
#head(all_data)

res2 <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
campaign_2014 <- get_resource("5b230e92-0a22-4a15-9572-0b19cc222985")[[2]]
colnames(campaign_2014) <- campaign_2014[1,]
campaign_2014 <- campaign_2014[-1,] %>% clean_names()



```

3\. Clean up the data format (fixing the parsing issue and standardizing the column names using \`janitor\`)

4\. Summarize the variables in the dataset. Are there missing values, and if so, should we be worried about them? Is every variable in the format it should be? If not, create new variable(s) that are in the right format.

The contribution amount variable which was in character format was changed to numeric.

```{r}
skim(campaign_2014)

campaign_2014$contribution_amount <- as.numeric(campaign_2014$contribution_amount)
```

5\. Visually explore the distribution of values of the contributions. What contributions are notable outliers? Do they share a similar characteristic(s)? It may be useful to plot the distribution of contributions without these outliers to get a better sense of the majority of the data.

```{r}
campaign_2014 %>% ggplot(aes(x = contribution_amount, y = ..density..)) + geom_histogram()

campaign_2014 %>% ggplot(aes(x = log(contribution_amount), y = ..density..)) + geom_histogram()

campaign_2014 %>% filter(contribution_amount <= 7000) %>% ggplot(aes(x = contribution_amount, y = ..density..)) + geom_histogram()

```

6\. List the top five candidates in each of these categories:

 + total contributions

 + mean contribution

 + number of contributions

```{r}
df <- campaign_2014 %>% group_by(contributors_name) %>% summarise(ave_cont  = mean(contribution_amount), total_cont  = sum(contribution_amount), n_cont  = n())

df %>% slice_max(ave_cont, n = 5) %>% select(contributors_name)
df %>% slice_max(total_cont, n = 5)%>% select(contributors_name)
df %>% slice_max(n_cont, n = 5)%>% select(contributors_name)
```

7\. Repeat 5 but without contributions from the candidates themselves.

```{r}
df2 <- campaign_2014 %>% filter(relationship_to_candidate != "Candidate") %>% group_by(contributors_name) %>% summarise(ave_cont  = mean(contribution_amount), total_cont  = sum(contribution_amount), n_cont  = n())

df2 %>% slice_max(ave_cont, n = 5) %>% select(contributors_name)
df2 %>% slice_max(total_cont, n = 5)%>% select(contributors_name)
df2 %>% slice_max(n_cont, n = 5)%>% select(contributors_name)
```

8\. How many contributors gave money to more than one candidate?

```{r}

campaign_2014 %>% select(contributors_name, candidate) %>% distinct() %>% group_by(contributors_name) %>% summarise(ncand = n()) %>% filter(ncand >1)
```
